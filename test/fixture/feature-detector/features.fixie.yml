columns:                                                           [feature,                                   minimum,   maximum, exclude, hhvmMinimum, hhmvMaximum, hhvmExclude]
data:
 Can use closures:                                                 [closure,                                   '5.3.x',   '999',   [],      '0.x',       '999',       []         ]
 Can bind closures:                                                [closure.bind,                              '5.4.x',   '999',   [],      '3.4.x',     '999',       []         ]
 Can use constants with array values:                              [constant.array,                            '5.6.x',   '999',   [],      '3.4.x',     '999',       []         ]
 Can use class constants with array values:                        [constant.class.array,                      '5.6.x',   '999',   [],      '999',       '0.x',       []         ]
 Can use class constants with expression values:                   [constant.class.expression,                 '5.6.x',   '999',   [],      '0.x',       '999',       []         ]
 Can use constants with expression values:                         [constant.expression,                       '5.6.x',   '999',   [],      '0.x',       '999',       []         ]
 Can use generators:                                               [generator,                                 '5.5.x',   '999',   [],      '0.x',       '999',       []         ]
 Can throw an exception into a generator:                          [generator.exception,                       '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield:                                                        [generator.yield,                           '5.5.x',   '999',   [],      '0.x',       '999',       []         ]
 Can yield and assign the result:                                  [generator.yield.assign,                    '999',     '0.x',   [],      '0.x',       '999',       []         ]
 Can yield a key and value and assign the result:                  [generator.yield.assign.key,                '999',     '0.x',   [],      '0.x',       '999',       []         ]
 Can yield no value and assign the result:                         [generator.yield.assign.nothing,            '5.5.x',   '999',   [],      '3.4.x',     '999',       []         ]
 Can yield as an expression:                                       [generator.yield.expression,                '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield as an expression and assign the result:                 [generator.yield.expression.assign,         '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield a key and value as an expression and assign the result: [generator.yield.expression.assign.key,     '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield no value as an expression and assign the result:        [generator.yield.expression.assign.nothing, '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield a key and value as an expression:                       [generator.yield.expression.key,            '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield no value as an expression:                              [generator.yield.expression.nothing,        '5.5.x',   '999',   [],      '999',       '0.x',       []         ]
 Can yield a key and value:                                        [generator.yield.key,                       '5.5.x',   '999',   [],      '0.x',       '999',       []         ]
 Can yield no value:                                               [generator.yield.nothing,                   '5.5.x',   '999',   [],      '3.4.x',     '999',       []         ]
 Can use a constant as a parameter default value:                  [parameter.default.constant,                '5.4.6.x', '999',   [],      '999',       '0.x',       []         ]
 Can type hint a parameter as callable:                            [parameter.type.callable,                   '5.4.x',   '999',   [],      '0.x',       '999',       []         ]
 Reflection function exports include full array default value:     [reflection.function.export.default.array,  '999',     '0.x',   [],      '3.2.x',     '999',       []         ]
 Reflection function exports include by-reference information:     [reflection.function.export.reference,      '0.x',     '999',   [],      '3.4.x',     '999',       []         ]
 HHVM runtime:                                                     [runtime.hhvm,                              '999',     '0.x',   [],      '0.x',       '999',       []         ]
 PHP runtime:                                                      [runtime.php,                               '0.x',     '999',   [],      '999',       '0.x',       []         ]
 Can use traits:                                                   [trait,                                     '5.4.x',   '999',   [],      '0.x',       '999',       []         ]
